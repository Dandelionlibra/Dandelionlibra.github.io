<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker-Compose on YuChen</title><link>https://Dandelionlibra.github.io/tags/docker-compose/</link><description>Recent content in Docker-Compose on YuChen</description><generator>Hugo -- gohugo.io</generator><language>zh-Hant-TW</language><lastBuildDate>Thu, 10 Jul 2025 16:56:00 +0000</lastBuildDate><atom:link href="https://Dandelionlibra.github.io/tags/docker-compose/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Docker-compose 快速建立多個關聯的 container</title><link>https://Dandelionlibra.github.io/post/virtual-environment/docker/docker-compose/</link><pubDate>Thu, 10 Jul 2025 16:56:00 +0000</pubDate><guid>https://Dandelionlibra.github.io/post/virtual-environment/docker/docker-compose/</guid><description>&lt;h2 id="內容大綱">內容大綱
&lt;/h2>&lt;ol>
&lt;li>為什麼要用 Docker-compose?&lt;/li>
&lt;li>Docker-compose 基本語法與結構&lt;/li>
&lt;li>建立多個關聯容器的範例&lt;/li>
&lt;li>常用指令與管理方式&lt;/li>
&lt;li>參考資料&lt;/li>
&lt;/ol>
&lt;h2 id="1-為什麼要用-docker-compose">1. 為什麼要用 Docker-compose？
&lt;/h2>&lt;p>當專案需要多個服務（如資料庫、後端、前端）協同運作時，單靠 &lt;code>docker run&lt;/code> 指令管理多個容器會變得複雜。Docker-compose 讓你能用一份 YAML 設定檔，定義多個 container 的建置、網路、資料掛載與依賴關係，一鍵啟動或關閉整個應用環境，提升開發效率與可維護性。&lt;/p>
&lt;hr>
&lt;h2 id="2-docker-compose-基本語法與結構">2. Docker-compose 基本語法與結構
&lt;/h2>&lt;p>Docker-compose 使用 &lt;code>docker-compose.yml&lt;/code> 檔案描述多個服務。基本結構如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3.8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">nginx:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;8080:80&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">db&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">mysql:8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MYSQL_ROOT_PASSWORD&lt;/span>: &lt;span style="color:#ae81ff">example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">db_data:/var/lib/mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">db_data&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>services&lt;/code>: 定義多個容器服務&lt;/li>
&lt;li>&lt;code>image&lt;/code>: 指定映像檔&lt;/li>
&lt;li>&lt;code>ports&lt;/code>: 對應主機與容器的 port&lt;/li>
&lt;li>&lt;code>environment&lt;/code>: 設定環境變數&lt;/li>
&lt;li>&lt;code>volumes&lt;/code>: 掛載資料卷&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="3-建立多個關聯容器的範例">3. 建立多個關聯容器的範例
&lt;/h2>&lt;p>以下以一個簡單的 Web + 資料庫應用為例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3.8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">python:3.10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./app:/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">working_dir&lt;/span>: &lt;span style="color:#ae81ff">/app&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: &lt;span style="color:#ae81ff">python app.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">depends_on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">db&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">postgres:15&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">POSTGRES_PASSWORD&lt;/span>: &lt;span style="color:#ae81ff">example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">pg_data:/var/lib/postgresql/data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pg_data&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>depends_on&lt;/code>: 指定啟動順序，app 依賴 db&lt;/li>
&lt;li>&lt;code>volumes&lt;/code>: 保持資料持久化&lt;/li>
&lt;/ul>
&lt;p>啟動所有服務：&lt;/p>
&lt;p>&lt;code>-d&lt;/code> 參數代表「detached mode」，也就是讓 Docker-Compose 在背景執行所有服務，而不佔用目前的終端視窗，不會顯示即時日誌。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker-compose up -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>停止並移除所有服務：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker-compose down
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="4-常用指令與管理方式">4. 常用指令與管理方式
&lt;/h2>&lt;ul>
&lt;li>啟動所有服務：&lt;code>docker-compose up&lt;/code>&lt;/li>
&lt;li>背景執行：&lt;code>docker-compose up -d&lt;/code>&lt;/li>
&lt;li>停止服務：&lt;code>docker-compose down&lt;/code>&lt;/li>
&lt;li>查看日誌：&lt;code>docker-compose logs&lt;/code>&lt;/li>
&lt;li>進入容器：&lt;code>docker-compose exec &amp;lt;service&amp;gt; bash&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>更多指令可參考 &lt;a class="link" href="https://docs.docker.com/compose/reference/overview/" target="_blank" rel="noopener"
>官方文件&lt;/a>。&lt;/p>
&lt;hr>
&lt;h2 id="5-參考資料">5. 參考資料
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.docker.com/compose/" target="_blank" rel="noopener"
>Docker Compose 官方文件&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.docker.com/" target="_blank" rel="noopener"
>Docker 官方網站&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://dandelionlibra.github.io/post/virtual-environment/setup-jupyter-notebook-with-docker/" target="_blank" rel="noopener"
>如何安裝 Docker（延伸閱讀）&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>